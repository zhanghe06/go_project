// Code generated by MockGen. DO NOT EDIT.
// Source: ./notice_conf.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	model "sap_cert_mgt/infra/model"

	gomock "github.com/golang/mock/gomock"
)

// MockNoticeConfRepoInterface is a mock of NoticeConfRepoInterface interface.
type MockNoticeConfRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockNoticeConfRepoInterfaceMockRecorder
}

// MockNoticeConfRepoInterfaceMockRecorder is the mock recorder for MockNoticeConfRepoInterface.
type MockNoticeConfRepoInterfaceMockRecorder struct {
	mock *MockNoticeConfRepoInterface
}

// NewMockNoticeConfRepoInterface creates a new mock instance.
func NewMockNoticeConfRepoInterface(ctrl *gomock.Controller) *MockNoticeConfRepoInterface {
	mock := &MockNoticeConfRepoInterface{ctrl: ctrl}
	mock.recorder = &MockNoticeConfRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoticeConfRepoInterface) EXPECT() *MockNoticeConfRepoInterfaceMockRecorder {
	return m.recorder
}

// GetEmail mocks base method.
func (m *MockNoticeConfRepoInterface) GetEmail() (*model.NoticeConf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmail")
	ret0, _ := ret[0].(*model.NoticeConf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmail indicates an expected call of GetEmail.
func (mr *MockNoticeConfRepoInterfaceMockRecorder) GetEmail() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmail", reflect.TypeOf((*MockNoticeConfRepoInterface)(nil).GetEmail))
}

// ModEmail mocks base method.
func (m *MockNoticeConfRepoInterface) ModEmail(data map[string]interface{}, updatedBy string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModEmail", data, updatedBy)
	ret0, _ := ret[0].(error)
	return ret0
}

// ModEmail indicates an expected call of ModEmail.
func (mr *MockNoticeConfRepoInterfaceMockRecorder) ModEmail(data, updatedBy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModEmail", reflect.TypeOf((*MockNoticeConfRepoInterface)(nil).ModEmail), data, updatedBy)
}
